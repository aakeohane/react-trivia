{"version":3,"sources":["img/quiz.png","components/LandingPage.js","components/ButtonOne.js","components/ButtonTwo.js","components/ButtonThree.js","components/ButtonFour.js","components/ButtonFive.js","App.js","index.js"],"names":["LandingPage","props","className","src","logo","alt","onClick","onStart","href","rel","target","ButtonOne","active","activeOne","answered","isCorrect","setButtonGroupOne","id","newChoices","choices","splice","fixedAnswers","setChoices","clickHandlerOne","disabled","activeTwo","setButtonGroupTwo","ButtonThree","activeThree","setButtonGroupThree","ButtonFour","activeFour","setButtonGroupFour","ButtonFive","activeFive","setButtonGroupFive","clickHandler","App","useState","buttonGroupOne","buttonGroupTwo","buttonGroupThreee","buttonGroupFour","buttonGroupFive","buttonArray","setButtonArray","quiz","setQuiz","quizData","setQuizData","initialChoicesArray","message","setMessage","count","setCount","correctAnswers","setCorrectAnswers","setAnswered","console","log","useEffect","fetch","then","res","json","data","results","bigArray","correctAnswerArray","map","item","index","correct_answer","push","wrongAnswersArray","incorrect_answers","name","nanoid","correctAnswer","shuffle","questionObject","question","answers","array","i","length","j","Math","floor","random","quizQuestions","questions","replace","answerButtons","ButtonTwo","includes","prevState","checkAnswers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73e106f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/quiz.d136d274.png\";","import React from 'react'\nimport logo from '../img/quiz.png'\n\nexport default function LandingPage(props) {\n\n  \n\n  return (\n    <div className=\"flex-wrapper\">\n      <div className=\"content\">\n        <img src={logo} alt=\"quizzical logo\" className=\"quizzical-logo\" />\n        <h1>Quizzical</h1>\n        <p> Test your knowledge! When you start the quiz, you will have to answer 5 random questions. Good luck!</p>\n        <button className=\"quizzical-button\" onClick={props.onStart}> Start quiz!</button>\n      </div>\n      <div className=\"footer\">\n        <footer> Meticulously coded by <a href=\"https://github.com/aakeohane/react-trivia\" rel=\"noreferrer\" target=\"_blank\">Aaron</a></footer>\n      </div>\n    </div>\n  )\n}","import React from \"react\";\n\nconst ButtonOne = props => {\n\n   const clickHandlerOne = () => {\n      props.setButtonGroupOne(props.id)\n      const newChoices = [...props.choices]\n      newChoices.splice(0,1, props.fixedAnswers)\n      props.setChoices(newChoices)\n   }\n\n   const active = props.activeOne\n\n     return (\n        <button\n           className={`answers-btn \n           ${active && 'blue'}\n           ${props.answered && 'faded'}\n           ${active && props.answered && 'green'}\n           ${props.answered && props.isCorrect && 'green'} \n           ${active && props.answered && !props.isCorrect && 'red'}\n           `}\n           onClick={() => clickHandlerOne()}\n           disabled={props.answered ? true : false} >\n          {props.fixedAnswers}\n        </button>\n     )\n\n}\n\nexport default ButtonOne","import React from \"react\";\n\nconst ButtonOne = props => {\n\n   const clickHandlerOne = () => {\n      props.setButtonGroupTwo(props.id)\n      const newChoices = [...props.choices]\n      newChoices.splice(1,1, props.fixedAnswers)\n      props.setChoices(newChoices)\n   }\n\n     return (\n        <button\n           className={`answers-btn \n           ${props.activeTwo && 'blue'}\n           ${props.answered && 'faded'}\n           ${props.activeTwo && props.answered && 'green'}\n           ${props.answered && props.isCorrect && 'green'} \n           ${props.activeTwo && props.answered && !props.isCorrect && 'red'}\n           `}\n           onClick={() => clickHandlerOne()}\n           disabled={props.answered ? true : false} >\n          {props.fixedAnswers}\n        </button>\n     )\n\n}\n\nexport default ButtonOne","import React from \"react\";\n\nconst ButtonThree = props => {\n\n   const clickHandlerOne = () => {\n      props.setButtonGroupThree(props.id)\n      const newChoices = [...props.choices]\n      newChoices.splice(2,1, props.fixedAnswers)\n      props.setChoices(newChoices)\n   }\n\n     return (\n        <button\n           className={`answers-btn \n           ${props.activeThree && 'blue'}\n           ${props.answered && 'faded'}\n           ${props.activeThree && props.answered && 'green'}\n           ${props.answered && props.isCorrect && 'green'} \n           ${props.activeThree && props.answered && !props.isCorrect && 'red'}\n           `}\n           onClick={() => clickHandlerOne()}\n           disabled={props.answered ? true : false} >\n          {props.fixedAnswers}\n        </button>\n     )\n\n}\n\nexport default ButtonThree","import React from \"react\";\n\nconst ButtonFour = props => {\n\n   const clickHandlerOne = () => {\n      props.setButtonGroupFour(props.id)\n      const newChoices = [...props.choices]\n      newChoices.splice(3,1, props.fixedAnswers)\n      props.setChoices(newChoices)\n   }\n\n     return (\n        <button\n           className={`answers-btn \n           ${props.activeFour && 'blue'}\n           ${props.answered && 'faded'}\n           ${props.activeFour && props.answered && 'green'}\n           ${props.answered && props.isCorrect && 'green'} \n           ${props.activeFour && props.answered && !props.isCorrect && 'red'}\n           `}\n           onClick={() => clickHandlerOne()}\n           disabled={props.answered ? true : false} >\n          {props.fixedAnswers}\n        </button>\n     )\n\n}\n\nexport default ButtonFour","import React from \"react\";\n\nconst ButtonFive = props => {\n\n  const clickHandler = () => {\n    props.setButtonGroupFive(props.id)\n    const newChoices = [...props.choices]\n    newChoices.splice(4,1, props.fixedAnswers)\n    props.setChoices(newChoices)\n\n   }\n\n     return (\n        <button\n           className={`answers-btn \n           ${props.activeFive && 'blue'}\n           ${props.answered && 'faded'}\n           ${props.activeFive && props.answered && 'green'}\n           ${props.answered && props.isCorrect && 'green'} \n           ${props.activeFive && props.answered && !props.isCorrect && 'red'}\n           `}\n           onClick={() => clickHandler()}\n           disabled={props.answered ? true : false} >\n          {props.fixedAnswers}\n        </button>\n     )\n\n}\n\nexport default ButtonFive","import { useState } from 'react'\nimport { useEffect } from 'react'\nimport LandingPage from './components/LandingPage'\nimport ButtonOne from './components/ButtonOne'\nimport ButtonTwo from './components/ButtonTwo'\nimport ButtonThree from './components/ButtonThree'\nimport ButtonFour from './components/ButtonFour'\nimport ButtonFive from './components/ButtonFive'\nimport { nanoid } from 'nanoid'\n\nfunction App() {\n\n  // if button is clicked change color, remove color and add\n  // color if another button is clicked\n  //  I struggled with this part of the code and could not find a solution without creating\n  // separate components and state for each group of answers\n  const [buttonGroupOne, setButtonGroupOne] = useState(0)\n  const [buttonGroupTwo, setButtonGroupTwo] = useState(0)\n  const [buttonGroupThreee, setButtonGroupThree] = useState(0)\n  const [buttonGroupFour, setButtonGroupFour] = useState(0)\n  const [buttonGroupFive, setButtonGroupFive] = useState(0)\n  \n  const [buttonArray, setButtonArray] = useState([])\n\n  const [quiz, setQuiz] = useState(false)\n  const [quizData, setQuizData] = useState([])\n  \n  // this initial array needs to have five blank string so they can be replaced by users quiz choices\n  const initialChoicesArray = ['', '', '', '', '']\n  \n  const [message, setMessage] = useState(false)\n  const[count, setCount] = useState(0)\n  const [correctAnswers, setCorrectAnswers] = useState([])\n  const [choices, setChoices] = useState(initialChoicesArray)\n\n  const [answered, setAnswered] = useState(false)\n  console.log(answered)\n  console.log(quizData)\n  \n  useEffect(() => {\n    if (!quiz) {\n    fetch(\"https://opentdb.com/api.php?amount=5\")\n      .then(res => res.json())\n      .then(data => setQuizData(data.results))\n    }\n  }, [quiz])\n\n  \n  const startQuiz = () => {\n    setQuiz(true)\n  }\n\n  useEffect(() => {\n    const bigArray = []\n    const correctAnswerArray = []\n    quizData.map((item, index) => {\n      const correctAnswers = item.correct_answer\n      correctAnswerArray.push(correctAnswers)\n      setCorrectAnswers(correctAnswerArray)\n      const wrongAnswers = item.incorrect_answers\n      const wrongAnswersArray = wrongAnswers.map(item => {\n        return {\n          name: item,\n          isCorrect: false,\n          id: nanoid(),\n          index: index\n        }\n      })\n      const correctAnswer = {\n        name: item.correct_answer,\n        isCorrect: true,\n        id: nanoid(),\n        index: index\n      }\n      wrongAnswersArray.push(correctAnswer)\n      \n      shuffle(wrongAnswersArray)\n      const questionObject = {\n        question: item.question,\n        answers: wrongAnswersArray\n      }\n      return bigArray.push(questionObject)\n      \n    })\n    setButtonArray(bigArray)\n      \n  }, [quizData])\n\n  const checkAnswers = (correctAnswers, choices) => {\n    setCount(0)\n    if (choices.includes('')) {\n      setMessage(true)\n    }\n    for (let i = 0; i < correctAnswers.length; i++){\n      if (correctAnswers[i] === choices[i]) {\n        setCount(prevState => prevState +1)\n      } else if (!choices.includes('')) {\n        setAnswered(true)\n        setMessage(false)\n      }\n    }\n  }\n\n  // Fisher-Yates Shuffle Algorithm\n  const shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  const quizQuestions = buttonArray.map(item => {\n    const unicodeQ = item.question\n    const questions = unicodeQ.replace(/&quot;/g,'\"').replace(/&#039;/g, \"'\").replace(/&amp;/g, \"&\").replace(/&rsquo;/g, \"\").replace(/&oacute;/g,'Ó').replace(/&uacute;/g, 'ú')\n    const answerButtons = item.answers.map(item => {\n      const unicodeA = item.name\n      const fixedAnswers = unicodeA.replace(/&quot;/g,'\"').replace(/&#039;/g, \"'\").replace(/&amp;/g, \"&\").replace(/&oacute;/g,'Ó').replace(/&uacute;/g, 'ú')\n      \n      if (item.index === 0) {\n        return (\n          <ButtonOne\n            fixedAnswers={fixedAnswers}\n            id={item.id}\n            key={item.id}\n            index={item.index}\n            isCorrect={item.isCorrect}\n            answered={answered}\n            choices={choices}\n            setChoices={setChoices}\n            setButtonGroupOne={setButtonGroupOne}\n            activeOne={buttonGroupOne === item.id ? true : false} />\n        )\n      }\n      if (item.index === 1)\n        return  (\n          <ButtonTwo\n            fixedAnswers={fixedAnswers}\n            id={item.id}\n            key={item.id}\n            index={item.index}\n            isCorrect={item.isCorrect}\n            choices={choices}\n            answered={answered}\n            setChoices={setChoices}\n            setButtonGroupTwo={setButtonGroupTwo}\n            activeTwo={buttonGroupTwo === item.id ? true : false} />\n        )\n      if (item.index === 2)\n        return  (\n          <ButtonThree\n            fixedAnswers={fixedAnswers}\n            id={item.id}\n            key={item.id}\n            index={item.index}\n            isCorrect={item.isCorrect}\n            choices={choices}\n            setChoices={setChoices}\n            answered={answered}\n            setButtonGroupThree={setButtonGroupThree}\n            activeThree={buttonGroupThreee === item.id ? true : false} />\n        )\n      if (item.index === 3)\n        return  (\n          <ButtonFour\n            fixedAnswers={fixedAnswers}\n            id={item.id}\n            index={item.index}\n            key={item.id}\n            isCorrect={item.isCorrect}\n            choices={choices}\n            setChoices={setChoices}\n            answered={answered}\n            setButtonGroupFour={setButtonGroupFour}\n            activeFour={buttonGroupFour === item.id ? true : false} />\n        )\n      else if (item.index === 4)\n        return  (\n          <ButtonFive\n            fixedAnswers={fixedAnswers}\n            id={item.id}\n            key={item.id}\n            index={item.index}\n            isCorrect={item.isCorrect}\n            choices={choices}\n            setChoices={setChoices}\n            answered={answered}\n            setButtonGroupFive={setButtonGroupFive}\n            activeFive={buttonGroupFive === item.id ? true : false} />\n        )\n    })\n      return (\n        \n        <div className=\"question-group\">\n          <p className=\"question\">{questions}</p>\n          <div className=\"button-container\">{answerButtons}</div>\n        </div>\n      )\n  })\n\n  const resetGame = () => {\n    setQuiz(false)\n    setAnswered(false)\n    // modifying state directly, but not sure how else to do this, \n    // have to reset choices state\n    setChoices(initialChoicesArray)\n  }\n  console.log(choices)\n\n  return (\n    <div className=\"App\">\n      <div className=\"landing-container\">\n        <div className=\"yellow-blob\"></div>\n        <div className=\"blue-blob\"></div>\n        { !quiz && <LandingPage onStart={() => startQuiz()} />}\n        <div className=\"quiz-container\">\n          { quiz && quizQuestions}\n          { message && <p className=\"message\">You must answer all questions!</p> }\n          { quiz && !answered && \n            <button className=\"quizzical-button\" \n              onClick={() => checkAnswers(correctAnswers, choices)}>Check answers\n            </button>}\n          { answered && \n            <div className=\"play-again-container\">\n              <p>You scored {count}/5 correct answers</p>\n              <button className=\"quizzical-button\"\n                onClick={() => resetGame()}>Play again\n              </button>\n            </div>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}